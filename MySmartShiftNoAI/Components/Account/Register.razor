@page "/account/register"
@using MySmartShiftNoAI.Services
@using MySmartShiftNoAI.Services.Interfaces
@using MySmartShiftNoAI.Models

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Register</h3>

<CascadingAuthenticationState>

    <AuthorizeView>

        <Authorized>
            <h2>You are already logged in</h2>
        </Authorized>

        <NotAuthorized>
            <div>
                <div>
                    <label>
                        Email:
                        <input type="email" @bind="RegisterModel.Username" disabled="@_isProcessing" />
                    </label>
                </div>
                <div>
                    <label>
                        Password:
                        <input type="password" @bind="RegisterModel.Password" disabled="@_isProcessing" />
                    </label>
                </div>

                @if (!string.IsNullOrEmpty(_error))
                {
                    <div style="color: red">
                        @_error
                    </div>
                }

                <button @onclick="RegisterUser" disabled="@_isProcessing">
                    @if (_isProcessing)
                    {
                        <span>Registering...</span>
                    }
                    else
                    {
                        <span>Register</span>
                    }
                </button>
            </div>
        </NotAuthorized>

    </AuthorizeView>

</CascadingAuthenticationState>

@code {
    private LoginArgs RegisterModel = new();
    private bool _isProcessing;
    private string? _error;

    private async Task RegisterUser()
    {
        if (string.IsNullOrWhiteSpace(RegisterModel.Username) || string.IsNullOrWhiteSpace(RegisterModel.Password))
        {
            _error = "Please enter both email and password";
            return;
        }

        try
        {
            _isProcessing = true;
            _error = null;

            var result = await AuthService.RegisterAsync(RegisterModel);
            if (result.IsSuccess)
            {
                var loginResult = await AuthService.LoginAsync(RegisterModel.Username, RegisterModel.Password);
                if (loginResult.IsSuccess)
                {
                    NavigationManager.NavigateTo("/");
                    return;
                }
                _error = "Registration successful but login failed. Please try logging in manually.";
            }
            else
            {
                _error = result.Errors.FirstOrDefault()?.Message ?? "Registration failed";
            }
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _isProcessing = false;
            StateHasChanged();
        }
    }
}