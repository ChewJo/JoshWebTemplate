@page "/"
@using JoshWebTemplate.Core.Models.Account
@using JoshWebTemplate.Core.Models.CompanyNews
@using JoshWebTemplate.Core.Services.Account.Api
@using JoshWebTemplate.Core.Services.CompanyNews.Api
@using JoshWebTemplate.Providers.Auth
@using JoshWebTemplate.Web.Components
@using JoshWebTemplate.Web.Components.CompanyNews
@using JoshWebTemplate.Web.Components.Employees
@using JoshWebTemplate.Web.Components.Projects
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager NavigationManager

@inject IAccountApiService AccountApiService;
@inject UserContext UserContext

<PageTitle>MadeUp's CMS</PageTitle>

<AuthorizeView>
    <Authorized>
        <h1>Welcome to MadeUp Consulting's CMS (Centralised Management System)</h1>
        <span>This website is used internally by <strong>MadeUp Consulting</strong>. This is where employees are able to keep up to date with the business, explore projects and share news.</span>
        <CompanyNewsFeed />

        <EmployeeFeed />

        <CompanyProjectsFeed />
    </Authorized>
    <NotAuthorized>
        <p><strong>You are not logged in.</strong></p>

        <RedirectToLogin />
    </NotAuthorized>
</AuthorizeView>

@code {
    public AddCompanyNewsRequest model = new();
    public UserModel userModel = new();

    protected override async Task OnInitializedAsync()
    {
        await UserContext.EnsureUserAsync();
    }

    private async void Logout()
    {
        var result = await AccountApiService.LogoutAsync();

        if (result.IsSuccess)
        {
            NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true); // Force refresh the page
        }
    }
}