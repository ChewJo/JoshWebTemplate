@page "/profile/{ProfileId:int?}"
@page "/profile"

@using JoshWebTemplate.Core.Models.Account
@using JoshWebTemplate.Core.Services.Account.Api
@using JoshWebTemplate.Providers.Auth
@using Microsoft.AspNetCore.Components.Authorization

@inject IAccountApiService AccountApiService;
@inject AuthenticationStateProvider AuthStateProvider
@inject UserContext UserContext

<PageTitle>Employees Page</PageTitle>

@if (Profile != null)
{
    <PageTitle>@Profile.Firstname's Page</PageTitle>
    <h1>Welcome to @Profile.Firstname @Profile.Lastname's account!</h1>

    <MudPaper>
        <h3>Contact Information</h3>
        <div>
            <MudIcon Icon="@Icons.Material.Filled.House" Title="Office" />
            @Profile.OfficeLocation.Value
        </div>

        <div>
            <MudIcon Icon="@Icons.Material.Filled.Phone" Title="Phone Number" />
            0324432432
        </div>

        <div>
            <MudIcon Icon="@Icons.Material.Filled.Email" Title="Email" />
            @Profile.Email
        </div>
    </MudPaper>

}
else
{
    <span>No profile found</span>
}

@code {
    [Parameter] public int? ProfileId { get; set; }
    public UserModel Profile { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await UserContext.EnsureUserAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ProfileId.HasValue || ProfileId != null)
        {
            Profile = await AccountApiService.GetUserModelByProfileIdAsync((int)ProfileId);
        }
        else
        {
            Profile = await AccountApiService.GetCurrentUserModelAsync();
        }
    }
}
