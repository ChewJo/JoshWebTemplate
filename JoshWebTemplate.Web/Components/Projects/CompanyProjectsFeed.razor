@using JoshWebTemplate.Core.Models.Account
@using JoshWebTemplate.Core.Models.CompanyProjects
@using JoshWebTemplate.Core.Services.Account.Api
@using JoshWebTemplate.Core.Services.CompanyProjects.Api
@using JoshWebTemplate.Providers.Auth
@using JoshWebTemplate.Web.Components.Dialogs

@inject ICompanyProjectsApiService CompanyProjectApiService
@inject IDialogService DialogService
@inject UserContext UserContext
@inject IAccountApiService AccountApiService

<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
    <MudText Typo="Typo.h5">Company Project Feed</MudText>

    <div style="display: flex; gap: 1rem; align-items: center;">
        <MudButton Variant="Variant.Text"
        Color="Color.Primary"
        Href="/allcompanyprojects"
        Style="text-decoration: underline; text-transform: none;">
            View All
        </MudButton>

        @if (CanEditOrDelete == true)
        {
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       OnClick="OpenDialogAsync">
                Add Project Feed
            </MudButton>
        }
    </div>
</div>

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Style="padding-bottom: 20px;">
    @if (CompanyProjectsList.Count <= 0)
    {
        <MudText Typo="Typo.h6" Color="Color.Secondary">There are no Projects!</MudText>
        <MudText>Feel free to add a new items, by clicking "Add project feed" on the right. This is for admins only!</MudText>
    }
    <MudGrid>
        @foreach (var project in CompanyProjectsList.Take(8))
        {
            <MudItem xs="12" sm="6" md="3">
                <CompanyProjectCard companyProjectsModel="@project" />
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code {
    public bool CanEditOrDelete = false;
    public UserModel userModel = new();

    private List<CompanyProjectModel> CompanyProjectsList = new();

    protected override async Task OnInitializedAsync()
    {
        await UserContext.EnsureUserAsync();

        CompanyProjectsList = await CompanyProjectApiService.GetAllCompanyProjectsAsync();

        userModel = await AccountApiService.GetCurrentUserModelAsync();

        if (userModel.Role == "admin")
        {
            CanEditOrDelete = true;
        }
    }

    private Task OpenDialogAsync()
    {
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Medium };

        return DialogService.ShowAsync<AddCompanyProjectDialog>("Add Company Project", options);
    }
}
